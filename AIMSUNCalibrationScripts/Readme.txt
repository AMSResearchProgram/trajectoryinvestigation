https://drive.google.com/drive/folders/1Dx9uaHMZ4rvpDuwV__zslSiZDNCfXU4T?usp=sharing

The model is developed in Aimsun version 8.4, and as vehicle headways can be obtained using an API, the license should include API as well.

There is one Aimsun model (.ang) and two databases (sqlite). As mentioned in the report, we ran two sets of trajectory scenarios and the regular Aimsun outputs of these scenarios (not vehicle trajectories) are in separate databases. The outputs of scenarios 1-108 is in “Trajectory_Base_Output_1_108.sqlite” and the outputs of scenarios 109-156 is in “Trajectory_Base_Output_109_156.sqlite”. However, for the second set the scenario IDs in database starts from 1. Therefore, the IDs of scenarios 109-156 is 1-48 in the database Trajectory_Base_Output_109_156.sqlite. Sorry for the inconvenience! To retrieve Aimsun outputs from the existing databases the corresponding database should be linked in the “Outputs to Generate” tab of scenario.

Trajectory outputs are saved as .csv files with the ID of the scenario. This is how the API (included in the material) saves the output.

To get trajectory outputs when running any new scenario, the “Headway_Output.py” API should be linked as an external API in “Aimsun Next APIs” tab of scenario. Also, “AAPI.py” library should be saved in the same directory as “Headway_Output.py”. Then after running a scenario, a .csv file of trajectory outputs will be saved in the same directory.

There are two required files to run the model. First, the path_assignment file (included in the material), which should be linked in the “Main” tab of scenario. Second, the ramp metering input files (saved in SDRMS folder in the material), which should be linked in “Aimsun Next APIs” tab of scenario. By double clinking on the existing SDRMS API, you can update the directory of the relevant input files.

To be able to setup trajectory scenarios easily we used a script, “SensitivityAnalysis” (Aimsun id: 21348132), which is already included in the model. This script runs from a replication. Before running the replication, the calibration parameters and their ranges in addition to section IDs (if any section-level calibration parameter such as lane-changing cooperation is used) should be updated. Then you can right click on the replication and select the script, and several scenarios depending on the parameters and their ranges will be ran.